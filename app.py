import streamlit as st
from sympy import symbols, Eq, sqrt, log, exp, solve, simplify, latex
from sympy import Integer

x = symbols('x')

st.set_page_config(page_title="EcuaÈ›ii Avansate Interactiv", page_icon="ğŸ§®", layout="centered")

def L(expr):
    return f"${latex(expr)}$"

# ----------------- EcuaÈ›ii logaritmice -----------------
def log_equation_steps(a,b,c):
    steps=[]
    eq = Eq(log(a*x + b), c)
    steps.append(("EcuaÈ›ia iniÈ›ialÄƒ", L(eq)))
    eq1 = Eq(a*x + b, exp(c))
    steps.append(("RidicÄƒm la exponent", L(eq1)))
    sol = solve(eq1, x)
    steps.append(("RezolvÄƒm pentru x", f"x = {sol}"))
    return steps

# ----------------- EcuaÈ›ii exponenÈ›iale -----------------
def exp_equation_steps(a,b,c):
    steps=[]
    eq = Eq(exp(a*x + b), c)
    steps.append(("EcuaÈ›ia iniÈ›ialÄƒ", L(eq)))
    eq1 = Eq(a*x + b, log(c))
    steps.append(("AplicÄƒm log natural", L(eq1)))
    sol = solve(eq1, x)
    steps.append(("RezolvÄƒm pentru x", f"x = {sol}"))
    return steps

# ----------------- EcuaÈ›ii iraÈ›ionale -----------------
def radical_equation_steps(a,b,c):
    steps=[]
    eq = Eq(sqrt(a*x + b), c)
    steps.append(("EcuaÈ›ia iniÈ›ialÄƒ", L(eq)))
    eq1 = Eq(a*x + b, c**2)
    steps.append(("RidicÄƒm la pÄƒtrat", L(eq1)))
    sol = solve(eq1, x)
    steps.append(("RezolvÄƒm pentru x", f"x = {sol}"))
    return steps

# ----------------- UI -----------------
st.title("ğŸ§® EcuaÈ›ii Avansate Interactiv")
st.write("Rezolvarea pas cu pas a ecuaÈ›iilor logaritmice, exponentiale È™i iraÈ›ionale")

mode = st.selectbox("Tipul ecuaÈ›iei", ["EcuaÈ›ie logaritmicÄƒ","EcuaÈ›ie exponenÈ›ialÄƒ","EcuaÈ›ie iraÈ›ionalÄƒ"])

steps = []

# ----------------- Input È™i generare paÈ™i -----------------
if mode=="EcuaÈ›ie logaritmicÄƒ":
    a = st.number_input("a",1)
    b = st.number_input("b",0)
    c = st.number_input("c",1)
    if st.button("GenereazÄƒ paÈ™ii"):
        steps = log_equation_steps(a,b,c)

elif mode=="EcuaÈ›ie exponenÈ›ialÄƒ":
    a = st.number_input("a",1)
    b = st.number_input("b",0)
    c = st.number_input("c",2)
    if st.button("GenereazÄƒ paÈ™ii"):
        steps = exp_equation_steps(a,b,c)

elif mode=="EcuaÈ›ie iraÈ›ionalÄƒ":
    a = st.number_input("a",1)
    b = st.number_input("b",0)
    c = st.number_input("c",2)
    if st.button("GenereazÄƒ paÈ™ii"):
        steps = radical_equation_steps(a,b,c)

# ----------------- AfiÈ™are paÈ™i -----------------
st.divider()
if steps:
    st.subheader("PaÈ™ii de rezolvare:")
    for idx, (title, desc) in enumerate(steps, start=1):
        st.markdown(f"**Pas {idx}: {title}**")
        st.markdown(desc)
else:
    st.info("CompleteazÄƒ coeficienÈ›ii È™i apasÄƒ 'GenereazÄƒ paÈ™ii' pentru a vedea rezolvarea.")
